<?php
/**
 * SystemOrdersApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Retailys
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Retailys API
 *
 * Communication API restful e-commerce system Retailys. Get access in system at [https://www.retailys.com](https://www.retailys.com)<h1>Introduction</h1>**Retailys API** allows to create an amazing ecosystem of e-commerce services and help to develop robust webshops and other e-commerce solutions. Thanks to many built-in omnichannel and multichannel principles, every developer has possibility tu use **Retailys API** for creating vast global e-commerce applications easily and effectively.
 *
 * The version of the OpenAPI document: 1.1.02
 * Contact: helpdesk@retailys.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Retailys\Test\Api;

use \Retailys\Configuration;
use \Retailys\ApiException;
use \Retailys\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SystemOrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  Retailys
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SystemOrdersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteOrderItem
     *
     * Delete item in Order by ID.
     *
     */
    public function testDeleteOrderItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrder
     *
     * Find order by ID.
     *
     */
    public function testGetOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrders
     *
     * Find orders by params.
     *
     */
    public function testGetOrders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrdersStauses
     *
     * Get All Oreder Statuses.
     *
     */
    public function testGetOrdersStauses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchOrderCancel
     *
     * Cancel order by ID.
     *
     */
    public function testPatchOrderCancel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchOrderDelivered
     *
     * Set flag delivered on order by ID.
     *
     */
    public function testPatchOrderDelivered()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchOrderDone
     *
     * Finish order by ID.
     *
     */
    public function testPatchOrderDone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchOrderPaid
     *
     * Paid order by ID.
     *
     */
    public function testPatchOrderPaid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchOrderSent
     *
     * Set flag sent on order by ID.
     *
     */
    public function testPatchOrderSent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchOrderStatus
     *
     * Finish order by ID.
     *
     */
    public function testPatchOrderStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postOrder
     *
     * Create new Order in system.
     *
     */
    public function testPostOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postOrderHistory
     *
     * Create new record in Order History by ID.
     *
     */
    public function testPostOrderHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postOrderItem
     *
     * Create new item in Order by ID.
     *
     */
    public function testPostOrderItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postOrderTracking
     *
     * Add tracking number in Order by ID.
     *
     */
    public function testPostOrderTracking()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putOrder
     *
     * Update Order system (only delivery address).
     *
     */
    public function testPutOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putOrderItem
     *
     * Update item in Order by ID.
     *
     */
    public function testPutOrderItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
