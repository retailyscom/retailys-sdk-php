<?php
/**
 * OrderModel
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Retailys
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Retailys API
 *
 * Communication API restful e-commerce system Retailys. Get access in system at [https://www.retailys.com](https://www.retailys.com)<h1>Introduction</h1>**Retailys API** allows to create an amazing ecosystem of e-commerce services and help to develop robust webshops and other e-commerce solutions. Thanks to many built-in omnichannel and multichannel principles, every developer has possibility tu use **Retailys API** for creating vast global e-commerce applications easily and effectively.
 *
 * The version of the OpenAPI document: 1.1.02
 * Contact: helpdesk@retailys.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Retailys\Model;

use \ArrayAccess;
use \Retailys\ObjectSerializer;

/**
 * OrderModel Class Doc Comment
 *
 * @category Class
 * @package  Retailys
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class OrderModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'customer' => 'OneOfNonExpandedModelUserModel',
        'company' => 'OneOfNonExpandedModelCompanyModel',
        'channel' => 'OneOfNonExpandedModelChannelModel',
        'dateOrder' => '\DateTime',
        'dateMaturity' => '\DateTime',
        'email' => 'string',
        'phone' => 'string',
        'name' => 'string',
        'street' => 'string',
        'city' => 'string',
        'zip' => 'string',
        'stateCode' => 'string',
        'companyNr' => 'string',
        'companyVat' => 'string',
        'deliveryEmail' => 'string',
        'deliveryPhone' => 'string',
        'deliveryName' => 'string',
        'deliveryStreet' => 'string',
        'deliveryCity' => 'string',
        'deliveryZip' => 'string',
        'deliveryStateCode' => 'string',
        'note' => 'string',
        'ourNote' => 'string',
        'hash' => 'string',
        'mainCurrencyCode' => 'string',
        'orderCurrencyCode' => 'string',
        'currencyRate' => 'float',
        'money' => 'float',
        'paid' => 'float',
        'datePaid' => '\DateTime',
        'items' => '\Retailys\Model\OrderModelItems[]',
        'weight' => 'float',
        'shipping' => 'OneOfNonExpandedModelShippingModel',
        'payment' => 'OneOfNonExpandedModelPaymentModel',
        'trackings' => '\Retailys\Model\OrderModelTrackings[]',
        'sent' => 'bool',
        'delivered' => 'bool',
        'done' => 'bool',
        'canceled' => 'bool',
        'orderUrl' => 'string',
        'invoiceUrl' => 'string',
        'ip' => 'string',
        'externalOrderPrefix' => 'string',
        'externalOrderId' => 'string',
        'externalPaymentId' => 'string',
        'externalPaymentUrl' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'customer' => null,
        'company' => null,
        'channel' => null,
        'dateOrder' => 'date-time',
        'dateMaturity' => 'date-time',
        'email' => 'email',
        'phone' => null,
        'name' => null,
        'street' => null,
        'city' => null,
        'zip' => null,
        'stateCode' => null,
        'companyNr' => null,
        'companyVat' => null,
        'deliveryEmail' => 'email',
        'deliveryPhone' => null,
        'deliveryName' => null,
        'deliveryStreet' => null,
        'deliveryCity' => null,
        'deliveryZip' => null,
        'deliveryStateCode' => null,
        'note' => null,
        'ourNote' => null,
        'hash' => null,
        'mainCurrencyCode' => null,
        'orderCurrencyCode' => null,
        'currencyRate' => 'float',
        'money' => 'float',
        'paid' => 'float',
        'datePaid' => 'date-time',
        'items' => null,
        'weight' => 'float',
        'shipping' => null,
        'payment' => null,
        'trackings' => null,
        'sent' => null,
        'delivered' => null,
        'done' => null,
        'canceled' => null,
        'orderUrl' => null,
        'invoiceUrl' => null,
        'ip' => 'ipv4',
        'externalOrderPrefix' => null,
        'externalOrderId' => null,
        'externalPaymentId' => null,
        'externalPaymentUrl' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'customer' => 'customer',
        'company' => 'company',
        'channel' => 'channel',
        'dateOrder' => 'date_order',
        'dateMaturity' => 'date_maturity',
        'email' => 'email',
        'phone' => 'phone',
        'name' => 'name',
        'street' => 'street',
        'city' => 'city',
        'zip' => 'zip',
        'stateCode' => 'state_code',
        'companyNr' => 'company_nr',
        'companyVat' => 'company_vat',
        'deliveryEmail' => 'delivery_email',
        'deliveryPhone' => 'delivery_phone',
        'deliveryName' => 'delivery_name',
        'deliveryStreet' => 'delivery_street',
        'deliveryCity' => 'delivery_city',
        'deliveryZip' => 'delivery_zip',
        'deliveryStateCode' => 'delivery_state_code',
        'note' => 'note',
        'ourNote' => 'our_note',
        'hash' => 'hash',
        'mainCurrencyCode' => 'main_currency_code',
        'orderCurrencyCode' => 'order_currency_code',
        'currencyRate' => 'currency_rate',
        'money' => 'money',
        'paid' => 'paid',
        'datePaid' => 'date_paid',
        'items' => 'items',
        'weight' => 'weight',
        'shipping' => 'shipping',
        'payment' => 'payment',
        'trackings' => 'trackings',
        'sent' => 'sent',
        'delivered' => 'delivered',
        'done' => 'done',
        'canceled' => 'canceled',
        'orderUrl' => 'order_url',
        'invoiceUrl' => 'invoice_url',
        'ip' => 'ip',
        'externalOrderPrefix' => 'external_order_prefix',
        'externalOrderId' => 'external_order_id',
        'externalPaymentId' => 'external_payment_id',
        'externalPaymentUrl' => 'external_payment_url'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'customer' => 'setCustomer',
        'company' => 'setCompany',
        'channel' => 'setChannel',
        'dateOrder' => 'setDateOrder',
        'dateMaturity' => 'setDateMaturity',
        'email' => 'setEmail',
        'phone' => 'setPhone',
        'name' => 'setName',
        'street' => 'setStreet',
        'city' => 'setCity',
        'zip' => 'setZip',
        'stateCode' => 'setStateCode',
        'companyNr' => 'setCompanyNr',
        'companyVat' => 'setCompanyVat',
        'deliveryEmail' => 'setDeliveryEmail',
        'deliveryPhone' => 'setDeliveryPhone',
        'deliveryName' => 'setDeliveryName',
        'deliveryStreet' => 'setDeliveryStreet',
        'deliveryCity' => 'setDeliveryCity',
        'deliveryZip' => 'setDeliveryZip',
        'deliveryStateCode' => 'setDeliveryStateCode',
        'note' => 'setNote',
        'ourNote' => 'setOurNote',
        'hash' => 'setHash',
        'mainCurrencyCode' => 'setMainCurrencyCode',
        'orderCurrencyCode' => 'setOrderCurrencyCode',
        'currencyRate' => 'setCurrencyRate',
        'money' => 'setMoney',
        'paid' => 'setPaid',
        'datePaid' => 'setDatePaid',
        'items' => 'setItems',
        'weight' => 'setWeight',
        'shipping' => 'setShipping',
        'payment' => 'setPayment',
        'trackings' => 'setTrackings',
        'sent' => 'setSent',
        'delivered' => 'setDelivered',
        'done' => 'setDone',
        'canceled' => 'setCanceled',
        'orderUrl' => 'setOrderUrl',
        'invoiceUrl' => 'setInvoiceUrl',
        'ip' => 'setIp',
        'externalOrderPrefix' => 'setExternalOrderPrefix',
        'externalOrderId' => 'setExternalOrderId',
        'externalPaymentId' => 'setExternalPaymentId',
        'externalPaymentUrl' => 'setExternalPaymentUrl'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'customer' => 'getCustomer',
        'company' => 'getCompany',
        'channel' => 'getChannel',
        'dateOrder' => 'getDateOrder',
        'dateMaturity' => 'getDateMaturity',
        'email' => 'getEmail',
        'phone' => 'getPhone',
        'name' => 'getName',
        'street' => 'getStreet',
        'city' => 'getCity',
        'zip' => 'getZip',
        'stateCode' => 'getStateCode',
        'companyNr' => 'getCompanyNr',
        'companyVat' => 'getCompanyVat',
        'deliveryEmail' => 'getDeliveryEmail',
        'deliveryPhone' => 'getDeliveryPhone',
        'deliveryName' => 'getDeliveryName',
        'deliveryStreet' => 'getDeliveryStreet',
        'deliveryCity' => 'getDeliveryCity',
        'deliveryZip' => 'getDeliveryZip',
        'deliveryStateCode' => 'getDeliveryStateCode',
        'note' => 'getNote',
        'ourNote' => 'getOurNote',
        'hash' => 'getHash',
        'mainCurrencyCode' => 'getMainCurrencyCode',
        'orderCurrencyCode' => 'getOrderCurrencyCode',
        'currencyRate' => 'getCurrencyRate',
        'money' => 'getMoney',
        'paid' => 'getPaid',
        'datePaid' => 'getDatePaid',
        'items' => 'getItems',
        'weight' => 'getWeight',
        'shipping' => 'getShipping',
        'payment' => 'getPayment',
        'trackings' => 'getTrackings',
        'sent' => 'getSent',
        'delivered' => 'getDelivered',
        'done' => 'getDone',
        'canceled' => 'getCanceled',
        'orderUrl' => 'getOrderUrl',
        'invoiceUrl' => 'getInvoiceUrl',
        'ip' => 'getIp',
        'externalOrderPrefix' => 'getExternalOrderPrefix',
        'externalOrderId' => 'getExternalOrderId',
        'externalPaymentId' => 'getExternalPaymentId',
        'externalPaymentUrl' => 'getExternalPaymentUrl'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['customer'] = $data['customer'] ?? null;
        $this->container['company'] = $data['company'] ?? null;
        $this->container['channel'] = $data['channel'] ?? null;
        $this->container['dateOrder'] = $data['dateOrder'] ?? null;
        $this->container['dateMaturity'] = $data['dateMaturity'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['phone'] = $data['phone'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['street'] = $data['street'] ?? null;
        $this->container['city'] = $data['city'] ?? null;
        $this->container['zip'] = $data['zip'] ?? null;
        $this->container['stateCode'] = $data['stateCode'] ?? null;
        $this->container['companyNr'] = $data['companyNr'] ?? null;
        $this->container['companyVat'] = $data['companyVat'] ?? null;
        $this->container['deliveryEmail'] = $data['deliveryEmail'] ?? null;
        $this->container['deliveryPhone'] = $data['deliveryPhone'] ?? null;
        $this->container['deliveryName'] = $data['deliveryName'] ?? null;
        $this->container['deliveryStreet'] = $data['deliveryStreet'] ?? null;
        $this->container['deliveryCity'] = $data['deliveryCity'] ?? null;
        $this->container['deliveryZip'] = $data['deliveryZip'] ?? null;
        $this->container['deliveryStateCode'] = $data['deliveryStateCode'] ?? null;
        $this->container['note'] = $data['note'] ?? null;
        $this->container['ourNote'] = $data['ourNote'] ?? null;
        $this->container['hash'] = $data['hash'] ?? null;
        $this->container['mainCurrencyCode'] = $data['mainCurrencyCode'] ?? null;
        $this->container['orderCurrencyCode'] = $data['orderCurrencyCode'] ?? null;
        $this->container['currencyRate'] = $data['currencyRate'] ?? null;
        $this->container['money'] = $data['money'] ?? null;
        $this->container['paid'] = $data['paid'] ?? null;
        $this->container['datePaid'] = $data['datePaid'] ?? null;
        $this->container['items'] = $data['items'] ?? null;
        $this->container['weight'] = $data['weight'] ?? null;
        $this->container['shipping'] = $data['shipping'] ?? null;
        $this->container['payment'] = $data['payment'] ?? null;
        $this->container['trackings'] = $data['trackings'] ?? null;
        $this->container['sent'] = $data['sent'] ?? null;
        $this->container['delivered'] = $data['delivered'] ?? null;
        $this->container['done'] = $data['done'] ?? null;
        $this->container['canceled'] = $data['canceled'] ?? null;
        $this->container['orderUrl'] = $data['orderUrl'] ?? null;
        $this->container['invoiceUrl'] = $data['invoiceUrl'] ?? null;
        $this->container['ip'] = $data['ip'] ?? null;
        $this->container['externalOrderPrefix'] = $data['externalOrderPrefix'] ?? null;
        $this->container['externalOrderId'] = $data['externalOrderId'] ?? null;
        $this->container['externalPaymentId'] = $data['externalPaymentId'] ?? null;
        $this->container['externalPaymentUrl'] = $data['externalPaymentUrl'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['deliveryStateCode']) && (mb_strlen($this->container['deliveryStateCode']) > 2)) {
            $invalidProperties[] = "invalid value for 'deliveryStateCode', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['deliveryStateCode']) && (mb_strlen($this->container['deliveryStateCode']) < 2)) {
            $invalidProperties[] = "invalid value for 'deliveryStateCode', the character length must be bigger than or equal to 2.";
        }

        if (!is_null($this->container['mainCurrencyCode']) && (mb_strlen($this->container['mainCurrencyCode']) > 3)) {
            $invalidProperties[] = "invalid value for 'mainCurrencyCode', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['mainCurrencyCode']) && (mb_strlen($this->container['mainCurrencyCode']) < 3)) {
            $invalidProperties[] = "invalid value for 'mainCurrencyCode', the character length must be bigger than or equal to 3.";
        }

        if (!is_null($this->container['orderCurrencyCode']) && (mb_strlen($this->container['orderCurrencyCode']) > 3)) {
            $invalidProperties[] = "invalid value for 'orderCurrencyCode', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['orderCurrencyCode']) && (mb_strlen($this->container['orderCurrencyCode']) < 3)) {
            $invalidProperties[] = "invalid value for 'orderCurrencyCode', the character length must be bigger than or equal to 3.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id Order identifier.
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets customer
     *
     * @return OneOfNonExpandedModelUserModel|null
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param OneOfNonExpandedModelUserModel|null $customer Customer.
     *
     * @return self
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets company
     *
     * @return OneOfNonExpandedModelCompanyModel|null
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     *
     * @param OneOfNonExpandedModelCompanyModel|null $company Company.
     *
     * @return self
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets channel
     *
     * @return OneOfNonExpandedModelChannelModel|null
     */
    public function getChannel()
    {
        return $this->container['channel'];
    }

    /**
     * Sets channel
     *
     * @param OneOfNonExpandedModelChannelModel|null $channel Channel.
     *
     * @return self
     */
    public function setChannel($channel)
    {
        $this->container['channel'] = $channel;

        return $this;
    }

    /**
     * Gets dateOrder
     *
     * @return \DateTime|null
     */
    public function getDateOrder()
    {
        return $this->container['dateOrder'];
    }

    /**
     * Sets dateOrder
     *
     * @param \DateTime|null $dateOrder Date Order.
     *
     * @return self
     */
    public function setDateOrder($dateOrder)
    {
        $this->container['dateOrder'] = $dateOrder;

        return $this;
    }

    /**
     * Gets dateMaturity
     *
     * @return \DateTime|null
     */
    public function getDateMaturity()
    {
        return $this->container['dateMaturity'];
    }

    /**
     * Sets dateMaturity
     *
     * @param \DateTime|null $dateMaturity Date Maturity.
     *
     * @return self
     */
    public function setDateMaturity($dateMaturity)
    {
        $this->container['dateMaturity'] = $dateMaturity;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email Customer invoice email.
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string|null
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string|null $phone Customer invoice phone.
     *
     * @return self
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Customer invoice name.
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets street
     *
     * @return string|null
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     *
     * @param string|null $street Customer invoice street.
     *
     * @return self
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string|null
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string|null $city Customer invoice city.
     *
     * @return self
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return string|null
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param string|null $zip Customer invoice zip code.
     *
     * @return self
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets stateCode
     *
     * @return string|null
     */
    public function getStateCode()
    {
        return $this->container['stateCode'];
    }

    /**
     * Sets stateCode
     *
     * @param string|null $stateCode Customer invoice state code.
     *
     * @return self
     */
    public function setStateCode($stateCode)
    {
        $this->container['stateCode'] = $stateCode;

        return $this;
    }

    /**
     * Gets companyNr
     *
     * @return string|null
     */
    public function getCompanyNr()
    {
        return $this->container['companyNr'];
    }

    /**
     * Sets companyNr
     *
     * @param string|null $companyNr Customer billing ID.
     *
     * @return self
     */
    public function setCompanyNr($companyNr)
    {
        $this->container['companyNr'] = $companyNr;

        return $this;
    }

    /**
     * Gets companyVat
     *
     * @return string|null
     */
    public function getCompanyVat()
    {
        return $this->container['companyVat'];
    }

    /**
     * Sets companyVat
     *
     * @param string|null $companyVat Customer billing VAT ID.
     *
     * @return self
     */
    public function setCompanyVat($companyVat)
    {
        $this->container['companyVat'] = $companyVat;

        return $this;
    }

    /**
     * Gets deliveryEmail
     *
     * @return string|null
     */
    public function getDeliveryEmail()
    {
        return $this->container['deliveryEmail'];
    }

    /**
     * Sets deliveryEmail
     *
     * @param string|null $deliveryEmail Customer delivery email.
     *
     * @return self
     */
    public function setDeliveryEmail($deliveryEmail)
    {
        $this->container['deliveryEmail'] = $deliveryEmail;

        return $this;
    }

    /**
     * Gets deliveryPhone
     *
     * @return string|null
     */
    public function getDeliveryPhone()
    {
        return $this->container['deliveryPhone'];
    }

    /**
     * Sets deliveryPhone
     *
     * @param string|null $deliveryPhone Customer delivery phone.
     *
     * @return self
     */
    public function setDeliveryPhone($deliveryPhone)
    {
        $this->container['deliveryPhone'] = $deliveryPhone;

        return $this;
    }

    /**
     * Gets deliveryName
     *
     * @return string|null
     */
    public function getDeliveryName()
    {
        return $this->container['deliveryName'];
    }

    /**
     * Sets deliveryName
     *
     * @param string|null $deliveryName Customer delivery name.
     *
     * @return self
     */
    public function setDeliveryName($deliveryName)
    {
        $this->container['deliveryName'] = $deliveryName;

        return $this;
    }

    /**
     * Gets deliveryStreet
     *
     * @return string|null
     */
    public function getDeliveryStreet()
    {
        return $this->container['deliveryStreet'];
    }

    /**
     * Sets deliveryStreet
     *
     * @param string|null $deliveryStreet Customer delivery street.
     *
     * @return self
     */
    public function setDeliveryStreet($deliveryStreet)
    {
        $this->container['deliveryStreet'] = $deliveryStreet;

        return $this;
    }

    /**
     * Gets deliveryCity
     *
     * @return string|null
     */
    public function getDeliveryCity()
    {
        return $this->container['deliveryCity'];
    }

    /**
     * Sets deliveryCity
     *
     * @param string|null $deliveryCity Customer delivery city.
     *
     * @return self
     */
    public function setDeliveryCity($deliveryCity)
    {
        $this->container['deliveryCity'] = $deliveryCity;

        return $this;
    }

    /**
     * Gets deliveryZip
     *
     * @return string|null
     */
    public function getDeliveryZip()
    {
        return $this->container['deliveryZip'];
    }

    /**
     * Sets deliveryZip
     *
     * @param string|null $deliveryZip Customer delivery zip code.
     *
     * @return self
     */
    public function setDeliveryZip($deliveryZip)
    {
        $this->container['deliveryZip'] = $deliveryZip;

        return $this;
    }

    /**
     * Gets deliveryStateCode
     *
     * @return string|null
     */
    public function getDeliveryStateCode()
    {
        return $this->container['deliveryStateCode'];
    }

    /**
     * Sets deliveryStateCode
     *
     * @param string|null $deliveryStateCode Customer delivery state code.
     *
     * @return self
     */
    public function setDeliveryStateCode($deliveryStateCode)
    {
        if (!is_null($deliveryStateCode) && (mb_strlen($deliveryStateCode) > 2)) {
            throw new \InvalidArgumentException('invalid length for $deliveryStateCode when calling OrderModel., must be smaller than or equal to 2.');
        }
        if (!is_null($deliveryStateCode) && (mb_strlen($deliveryStateCode) < 2)) {
            throw new \InvalidArgumentException('invalid length for $deliveryStateCode when calling OrderModel., must be bigger than or equal to 2.');
        }

        $this->container['deliveryStateCode'] = $deliveryStateCode;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string|null
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string|null $note Customer note.
     *
     * @return self
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets ourNote
     *
     * @return string|null
     */
    public function getOurNote()
    {
        return $this->container['ourNote'];
    }

    /**
     * Sets ourNote
     *
     * @param string|null $ourNote Customer our note.
     *
     * @return self
     */
    public function setOurNote($ourNote)
    {
        $this->container['ourNote'] = $ourNote;

        return $this;
    }

    /**
     * Gets hash
     *
     * @return string|null
     */
    public function getHash()
    {
        return $this->container['hash'];
    }

    /**
     * Sets hash
     *
     * @param string|null $hash Order hash.
     *
     * @return self
     */
    public function setHash($hash)
    {
        $this->container['hash'] = $hash;

        return $this;
    }

    /**
     * Gets mainCurrencyCode
     *
     * @return string|null
     */
    public function getMainCurrencyCode()
    {
        return $this->container['mainCurrencyCode'];
    }

    /**
     * Sets mainCurrencyCode
     *
     * @param string|null $mainCurrencyCode Main currency code.
     *
     * @return self
     */
    public function setMainCurrencyCode($mainCurrencyCode)
    {
        if (!is_null($mainCurrencyCode) && (mb_strlen($mainCurrencyCode) > 3)) {
            throw new \InvalidArgumentException('invalid length for $mainCurrencyCode when calling OrderModel., must be smaller than or equal to 3.');
        }
        if (!is_null($mainCurrencyCode) && (mb_strlen($mainCurrencyCode) < 3)) {
            throw new \InvalidArgumentException('invalid length for $mainCurrencyCode when calling OrderModel., must be bigger than or equal to 3.');
        }

        $this->container['mainCurrencyCode'] = $mainCurrencyCode;

        return $this;
    }

    /**
     * Gets orderCurrencyCode
     *
     * @return string|null
     */
    public function getOrderCurrencyCode()
    {
        return $this->container['orderCurrencyCode'];
    }

    /**
     * Sets orderCurrencyCode
     *
     * @param string|null $orderCurrencyCode Order currency code.
     *
     * @return self
     */
    public function setOrderCurrencyCode($orderCurrencyCode)
    {
        if (!is_null($orderCurrencyCode) && (mb_strlen($orderCurrencyCode) > 3)) {
            throw new \InvalidArgumentException('invalid length for $orderCurrencyCode when calling OrderModel., must be smaller than or equal to 3.');
        }
        if (!is_null($orderCurrencyCode) && (mb_strlen($orderCurrencyCode) < 3)) {
            throw new \InvalidArgumentException('invalid length for $orderCurrencyCode when calling OrderModel., must be bigger than or equal to 3.');
        }

        $this->container['orderCurrencyCode'] = $orderCurrencyCode;

        return $this;
    }

    /**
     * Gets currencyRate
     *
     * @return float|null
     */
    public function getCurrencyRate()
    {
        return $this->container['currencyRate'];
    }

    /**
     * Sets currencyRate
     *
     * @param float|null $currencyRate Order Currency Rate.
     *
     * @return self
     */
    public function setCurrencyRate($currencyRate)
    {
        $this->container['currencyRate'] = $currencyRate;

        return $this;
    }

    /**
     * Gets money
     *
     * @return float|null
     */
    public function getMoney()
    {
        return $this->container['money'];
    }

    /**
     * Sets money
     *
     * @param float|null $money Order Money.
     *
     * @return self
     */
    public function setMoney($money)
    {
        $this->container['money'] = $money;

        return $this;
    }

    /**
     * Gets paid
     *
     * @return float|null
     */
    public function getPaid()
    {
        return $this->container['paid'];
    }

    /**
     * Sets paid
     *
     * @param float|null $paid Order Paid.
     *
     * @return self
     */
    public function setPaid($paid)
    {
        $this->container['paid'] = $paid;

        return $this;
    }

    /**
     * Gets datePaid
     *
     * @return \DateTime|null
     */
    public function getDatePaid()
    {
        return $this->container['datePaid'];
    }

    /**
     * Sets datePaid
     *
     * @param \DateTime|null $datePaid Date Paid.
     *
     * @return self
     */
    public function setDatePaid($datePaid)
    {
        $this->container['datePaid'] = $datePaid;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \Retailys\Model\OrderModelItems[]|null
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \Retailys\Model\OrderModelItems[]|null $items Order items.
     *
     * @return self
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return float|null
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param float|null $weight Weight of orders in kilograms
     *
     * @return self
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets shipping
     *
     * @return OneOfNonExpandedModelShippingModel|null
     */
    public function getShipping()
    {
        return $this->container['shipping'];
    }

    /**
     * Sets shipping
     *
     * @param OneOfNonExpandedModelShippingModel|null $shipping Shipping.
     *
     * @return self
     */
    public function setShipping($shipping)
    {
        $this->container['shipping'] = $shipping;

        return $this;
    }

    /**
     * Gets payment
     *
     * @return OneOfNonExpandedModelPaymentModel|null
     */
    public function getPayment()
    {
        return $this->container['payment'];
    }

    /**
     * Sets payment
     *
     * @param OneOfNonExpandedModelPaymentModel|null $payment Payment.
     *
     * @return self
     */
    public function setPayment($payment)
    {
        $this->container['payment'] = $payment;

        return $this;
    }

    /**
     * Gets trackings
     *
     * @return \Retailys\Model\OrderModelTrackings[]|null
     */
    public function getTrackings()
    {
        return $this->container['trackings'];
    }

    /**
     * Sets trackings
     *
     * @param \Retailys\Model\OrderModelTrackings[]|null $trackings Order trackings.
     *
     * @return self
     */
    public function setTrackings($trackings)
    {
        $this->container['trackings'] = $trackings;

        return $this;
    }

    /**
     * Gets sent
     *
     * @return bool|null
     */
    public function getSent()
    {
        return $this->container['sent'];
    }

    /**
     * Sets sent
     *
     * @param bool|null $sent Order sent.
     *
     * @return self
     */
    public function setSent($sent)
    {
        $this->container['sent'] = $sent;

        return $this;
    }

    /**
     * Gets delivered
     *
     * @return bool|null
     */
    public function getDelivered()
    {
        return $this->container['delivered'];
    }

    /**
     * Sets delivered
     *
     * @param bool|null $delivered Order delivered.
     *
     * @return self
     */
    public function setDelivered($delivered)
    {
        $this->container['delivered'] = $delivered;

        return $this;
    }

    /**
     * Gets done
     *
     * @return bool|null
     */
    public function getDone()
    {
        return $this->container['done'];
    }

    /**
     * Sets done
     *
     * @param bool|null $done Order done.
     *
     * @return self
     */
    public function setDone($done)
    {
        $this->container['done'] = $done;

        return $this;
    }

    /**
     * Gets canceled
     *
     * @return bool|null
     */
    public function getCanceled()
    {
        return $this->container['canceled'];
    }

    /**
     * Sets canceled
     *
     * @param bool|null $canceled Order canceled.
     *
     * @return self
     */
    public function setCanceled($canceled)
    {
        $this->container['canceled'] = $canceled;

        return $this;
    }

    /**
     * Gets orderUrl
     *
     * @return string|null
     */
    public function getOrderUrl()
    {
        return $this->container['orderUrl'];
    }

    /**
     * Sets orderUrl
     *
     * @param string|null $orderUrl Order url.
     *
     * @return self
     */
    public function setOrderUrl($orderUrl)
    {
        $this->container['orderUrl'] = $orderUrl;

        return $this;
    }

    /**
     * Gets invoiceUrl
     *
     * @return string|null
     */
    public function getInvoiceUrl()
    {
        return $this->container['invoiceUrl'];
    }

    /**
     * Sets invoiceUrl
     *
     * @param string|null $invoiceUrl Invoice url.
     *
     * @return self
     */
    public function setInvoiceUrl($invoiceUrl)
    {
        $this->container['invoiceUrl'] = $invoiceUrl;

        return $this;
    }

    /**
     * Gets ip
     *
     * @return string|null
     */
    public function getIp()
    {
        return $this->container['ip'];
    }

    /**
     * Sets ip
     *
     * @param string|null $ip IP address from which the order was created
     *
     * @return self
     */
    public function setIp($ip)
    {
        $this->container['ip'] = $ip;

        return $this;
    }

    /**
     * Gets externalOrderPrefix
     *
     * @return string|null
     */
    public function getExternalOrderPrefix()
    {
        return $this->container['externalOrderPrefix'];
    }

    /**
     * Sets externalOrderPrefix
     *
     * @param string|null $externalOrderPrefix External Order system prefix.
     *
     * @return self
     */
    public function setExternalOrderPrefix($externalOrderPrefix)
    {
        $this->container['externalOrderPrefix'] = $externalOrderPrefix;

        return $this;
    }

    /**
     * Gets externalOrderId
     *
     * @return string|null
     */
    public function getExternalOrderId()
    {
        return $this->container['externalOrderId'];
    }

    /**
     * Sets externalOrderId
     *
     * @param string|null $externalOrderId External Order identifier.
     *
     * @return self
     */
    public function setExternalOrderId($externalOrderId)
    {
        $this->container['externalOrderId'] = $externalOrderId;

        return $this;
    }

    /**
     * Gets externalPaymentId
     *
     * @return string|null
     */
    public function getExternalPaymentId()
    {
        return $this->container['externalPaymentId'];
    }

    /**
     * Sets externalPaymentId
     *
     * @param string|null $externalPaymentId External Order payment id.
     *
     * @return self
     */
    public function setExternalPaymentId($externalPaymentId)
    {
        $this->container['externalPaymentId'] = $externalPaymentId;

        return $this;
    }

    /**
     * Gets externalPaymentUrl
     *
     * @return string|null
     */
    public function getExternalPaymentUrl()
    {
        return $this->container['externalPaymentUrl'];
    }

    /**
     * Sets externalPaymentUrl
     *
     * @param string|null $externalPaymentUrl External Order payment url.
     *
     * @return self
     */
    public function setExternalPaymentUrl($externalPaymentUrl)
    {
        $this->container['externalPaymentUrl'] = $externalPaymentUrl;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


