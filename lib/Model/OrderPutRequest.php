<?php
/**
 * OrderPutRequest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Retailys
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Retailys API
 *
 * Communication API restful e-commerce system Retailys. Get access in system at [https://www.retailys.com](https://www.retailys.com)<h1>Introduction</h1>**Retailys API** allows to create an amazing ecosystem of e-commerce services and help to develop robust webshops and other e-commerce solutions. Thanks to many built-in omnichannel and multichannel principles, every developer has possibility tu use **Retailys API** for creating vast global e-commerce applications easily and effectively.
 *
 * The version of the OpenAPI document: 1.1.02
 * Contact: helpdesk@retailys.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Retailys\Model;

use \ArrayAccess;
use \Retailys\ObjectSerializer;

/**
 * OrderPutRequest Class Doc Comment
 *
 * @category Class
 * @package  Retailys
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class OrderPutRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderPutRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'deliveryName' => 'string',
        'deliveryStreet' => 'string',
        'deliveryCity' => 'string',
        'deliveryZip' => 'string',
        'deliveryStateCode' => 'string',
        'deliveryPhone' => 'string',
        'deliveryEmail' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'deliveryName' => null,
        'deliveryStreet' => null,
        'deliveryCity' => null,
        'deliveryZip' => null,
        'deliveryStateCode' => null,
        'deliveryPhone' => null,
        'deliveryEmail' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'deliveryName' => 'delivery_name',
        'deliveryStreet' => 'delivery_street',
        'deliveryCity' => 'delivery_city',
        'deliveryZip' => 'delivery_zip',
        'deliveryStateCode' => 'delivery_state_code',
        'deliveryPhone' => 'delivery_phone',
        'deliveryEmail' => 'delivery_email'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'deliveryName' => 'setDeliveryName',
        'deliveryStreet' => 'setDeliveryStreet',
        'deliveryCity' => 'setDeliveryCity',
        'deliveryZip' => 'setDeliveryZip',
        'deliveryStateCode' => 'setDeliveryStateCode',
        'deliveryPhone' => 'setDeliveryPhone',
        'deliveryEmail' => 'setDeliveryEmail'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'deliveryName' => 'getDeliveryName',
        'deliveryStreet' => 'getDeliveryStreet',
        'deliveryCity' => 'getDeliveryCity',
        'deliveryZip' => 'getDeliveryZip',
        'deliveryStateCode' => 'getDeliveryStateCode',
        'deliveryPhone' => 'getDeliveryPhone',
        'deliveryEmail' => 'getDeliveryEmail'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['deliveryName'] = $data['deliveryName'] ?? null;
        $this->container['deliveryStreet'] = $data['deliveryStreet'] ?? null;
        $this->container['deliveryCity'] = $data['deliveryCity'] ?? null;
        $this->container['deliveryZip'] = $data['deliveryZip'] ?? null;
        $this->container['deliveryStateCode'] = $data['deliveryStateCode'] ?? null;
        $this->container['deliveryPhone'] = $data['deliveryPhone'] ?? null;
        $this->container['deliveryEmail'] = $data['deliveryEmail'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id Order Id.
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets deliveryName
     *
     * @return string|null
     */
    public function getDeliveryName()
    {
        return $this->container['deliveryName'];
    }

    /**
     * Sets deliveryName
     *
     * @param string|null $deliveryName Delivery Name.
     *
     * @return self
     */
    public function setDeliveryName($deliveryName)
    {
        $this->container['deliveryName'] = $deliveryName;

        return $this;
    }

    /**
     * Gets deliveryStreet
     *
     * @return string|null
     */
    public function getDeliveryStreet()
    {
        return $this->container['deliveryStreet'];
    }

    /**
     * Sets deliveryStreet
     *
     * @param string|null $deliveryStreet Delivery Street.
     *
     * @return self
     */
    public function setDeliveryStreet($deliveryStreet)
    {
        $this->container['deliveryStreet'] = $deliveryStreet;

        return $this;
    }

    /**
     * Gets deliveryCity
     *
     * @return string|null
     */
    public function getDeliveryCity()
    {
        return $this->container['deliveryCity'];
    }

    /**
     * Sets deliveryCity
     *
     * @param string|null $deliveryCity Delivery City.
     *
     * @return self
     */
    public function setDeliveryCity($deliveryCity)
    {
        $this->container['deliveryCity'] = $deliveryCity;

        return $this;
    }

    /**
     * Gets deliveryZip
     *
     * @return string|null
     */
    public function getDeliveryZip()
    {
        return $this->container['deliveryZip'];
    }

    /**
     * Sets deliveryZip
     *
     * @param string|null $deliveryZip Delivery Zip code.
     *
     * @return self
     */
    public function setDeliveryZip($deliveryZip)
    {
        $this->container['deliveryZip'] = $deliveryZip;

        return $this;
    }

    /**
     * Gets deliveryStateCode
     *
     * @return string|null
     */
    public function getDeliveryStateCode()
    {
        return $this->container['deliveryStateCode'];
    }

    /**
     * Sets deliveryStateCode
     *
     * @param string|null $deliveryStateCode Delivery State code.
     *
     * @return self
     */
    public function setDeliveryStateCode($deliveryStateCode)
    {
        $this->container['deliveryStateCode'] = $deliveryStateCode;

        return $this;
    }

    /**
     * Gets deliveryPhone
     *
     * @return string|null
     */
    public function getDeliveryPhone()
    {
        return $this->container['deliveryPhone'];
    }

    /**
     * Sets deliveryPhone
     *
     * @param string|null $deliveryPhone Delivery Phone.
     *
     * @return self
     */
    public function setDeliveryPhone($deliveryPhone)
    {
        $this->container['deliveryPhone'] = $deliveryPhone;

        return $this;
    }

    /**
     * Gets deliveryEmail
     *
     * @return string|null
     */
    public function getDeliveryEmail()
    {
        return $this->container['deliveryEmail'];
    }

    /**
     * Sets deliveryEmail
     *
     * @param string|null $deliveryEmail Delivery Email.
     *
     * @return self
     */
    public function setDeliveryEmail($deliveryEmail)
    {
        $this->container['deliveryEmail'] = $deliveryEmail;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


